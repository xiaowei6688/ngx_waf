(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{402:function(_,v,t){"use strict";t.r(v);var e=t(44),a=Object(e.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h1",{attrs:{id:"配置语法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置语法"}},[_._v("#")]),_._v(" 配置语法")]),_._v(" "),t("h2",{attrs:{id:"waf"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#waf"}},[_._v("#")]),_._v(" "),t("code",[_._v("waf")])]),_._v(" "),t("ul",[t("li",[_._v("配置语法: waf <"),t("em",[_._v("on")]),_._v(" | "),t("em",[_._v("off")]),_._v(">")]),_._v(" "),t("li",[_._v("默认配置：waf "),t("em",[_._v("off")])]),_._v(" "),t("li",[_._v("配置段: server")])]),_._v(" "),t("p",[_._v("是否启用本模块。")]),_._v(" "),t("h2",{attrs:{id:"waf-rule-path"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#waf-rule-path"}},[_._v("#")]),_._v(" "),t("code",[_._v("waf_rule_path")])]),_._v(" "),t("ul",[t("li",[_._v("配置语法: waf_rule_path <*dir*>")]),_._v(" "),t("li",[_._v("默认配置：——")]),_._v(" "),t("li",[_._v("配置段: server")])]),_._v(" "),t("p",[_._v("规则文件所在目录，且必须以"),t("code",[_._v("/")]),_._v("结尾。")]),_._v(" "),t("h2",{attrs:{id:"waf-mode"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#waf-mode"}},[_._v("#")]),_._v(" "),t("code",[_._v("waf_mode")])]),_._v(" "),t("ul",[t("li",[_._v("配置语法: waf_mode <"),t("em",[_._v("mode_type")]),_._v("> ...")]),_._v(" "),t("li",[_._v("默认配置：——")]),_._v(" "),t("li",[_._v("配置段: server")])]),_._v(" "),t("p",[_._v("指定防火墙的工作模式，至少指定一个模式，最多指定八个模式。")]),_._v(" "),t("p",[t("code",[_._v("mode_type")]),_._v("具有下列取值（不区分大小写）:")]),_._v(" "),t("ul",[t("li",[_._v("GET: 当"),t("code",[_._v("Http.Method=GET")]),_._v("时启动检查。")]),_._v(" "),t("li",[_._v("HEAD: 当"),t("code",[_._v("Http.Method=HEAD")]),_._v("时启动检查。")]),_._v(" "),t("li",[_._v("POST: 当"),t("code",[_._v("Http.Method=POST")]),_._v("时启动检查。")]),_._v(" "),t("li",[_._v("PUT: 当"),t("code",[_._v("Http.Method=PUT")]),_._v("时启动检查。")]),_._v(" "),t("li",[_._v("DELETE: 当"),t("code",[_._v("Http.Method=DELETE")]),_._v("时启动检查。")]),_._v(" "),t("li",[_._v("MKCOL: 当"),t("code",[_._v("Http.Method=MKCOL")]),_._v("时启动检查。")]),_._v(" "),t("li",[_._v("COPY: 当"),t("code",[_._v("Http.Method=COPY")]),_._v("时启动检查。")]),_._v(" "),t("li",[_._v("MOVE: 当"),t("code",[_._v("Http.Method=MOVE")]),_._v("时启动检查。")]),_._v(" "),t("li",[_._v("OPTIONS: 当"),t("code",[_._v("Http.Method=OPTIONS")]),_._v("时启动检查。")]),_._v(" "),t("li",[_._v("PROPFIN: 当"),t("code",[_._v("Http.Method=PROPFIN")]),_._v("时启动检查。")]),_._v(" "),t("li",[_._v("PROPPATCH: 当"),t("code",[_._v("Http.Method=PROPPATCH")]),_._v("时启动检查。")]),_._v(" "),t("li",[_._v("LOCK: 当"),t("code",[_._v("Http.Method=LOCK")]),_._v("时启动检查。")]),_._v(" "),t("li",[_._v("UNLOCK: 当"),t("code",[_._v("Http.Method=UNLOCK")]),_._v("时启动检查。")]),_._v(" "),t("li",[_._v("PATCH: 当"),t("code",[_._v("Http.Method=PATCH")]),_._v("时启动检查。")]),_._v(" "),t("li",[_._v("TRAC: 当"),t("code",[_._v("Http.Method=TRAC")]),_._v("时启动检查。")]),_._v(" "),t("li",[_._v("IP: 启用 IP 地址的检查规则。")]),_._v(" "),t("li",[_._v("URL: 启用 url 的检查规则。")]),_._v(" "),t("li",[_._v("RBODY: 启用 POST 请求体的检查规则。")]),_._v(" "),t("li",[_._v("ARGS: 启用 args 的检查规则。")]),_._v(" "),t("li",[_._v("UA: 启用 user-agent 的检查规则。")]),_._v(" "),t("li",[_._v("COOKIE: 启用 cookie 的检查规则。")]),_._v(" "),t("li",[_._v("REFERER: 启用 referer 的检查规则。")]),_._v(" "),t("li",[_._v("CC: 启用 CC 防御。当你启用了此模式，你必须设置 "),t("a",{attrs:{href:"#waf-cc-deny"}},[_._v("waf_cc_deny")]),_._v("。")]),_._v(" "),t("li",[_._v("LIB-INJECTION：使用 "),t("a",{attrs:{href:"https://github.com/libinjection/libinjection",target:"_blank",rel:"noopener noreferrer"}},[_._v("libinjection"),t("OutboundLink")],1),_._v(" 检测 SQL 注入 和 XSS 攻击。")]),_._v(" "),t("li",[_._v("COMPAT：兼容模式，用来启用一些兼容性选项去兼容其它的模块或者环境，目前用于兼容 ngx_http_rewrite_module，详见"),t("RouterLink",{attrs:{to:"/zh-cn/guide/compatibility.html"}},[_._v("兼容性说明")]),_._v("。")],1),_._v(" "),t("li",[_._v("STRICT：严格模式，牺牲一些性能进行更多的检查，目前仅在启用了 "),t("code",[_._v("COMPAT")]),_._v(" 模式时生效，在 ngx_http_rewrite_module 生效前和生效后都进行一轮完整的检查。")]),_._v(" "),t("li",[_._v("CACHE：启用缓存。启用此模式后会缓存检查的结果，下次检查相同的目标时就不需要重复检查了。不过不会缓存 POST 体的检查结果。比如一个 URL 经过检查后并没有在黑名单中，那么下次检查相同的 URL 时就无需再次检查 URL 黑名单了。当你启用了此模式，你必须设置 "),t("a",{attrs:{href:"#waf-cache"}},[_._v("waf_cache")]),_._v("。")]),_._v(" "),t("li",[_._v("STD：标准工作模式，等价于 "),t("code",[_._v("HEAD GET POST IP URL RBODY ARGS UA CC COMPAT CACHE LIB-INJECTION")]),_._v("。")]),_._v(" "),t("li",[_._v("STATIC：适用于静态站点的工作模式，等价于 "),t("code",[_._v("HEAD GET IP URL UA CC CACHE")]),_._v("。")]),_._v(" "),t("li",[_._v("DYNAMIC：适用于动态站点的工作模式，等价于 "),t("code",[_._v("HEAD GET POST IP URL ARGS UA RBODY COOKIE CC COMPAT CACHE LIB-INJECTION")]),_._v("。")]),_._v(" "),t("li",[_._v("FULL: 启用所有的模式。")])]),_._v(" "),t("p",[_._v("您可以通过在某个 "),t("code",[_._v("mode_type")]),_._v(" 前增加 "),t("code",[_._v("!")]),_._v(" 前缀来关闭该模式，下面是一个例子。\n表示使用标准的工作模式，但是不检查 User-Agent。")]),_._v(" "),t("div",{staticClass:"language-nginx extra-class"},[t("pre",{pre:!0,attrs:{class:"language-nginx"}},[t("code",[_._v("waf_mode STD "),t("span",{pre:!0,attrs:{class:"token operator"}},[_._v("!")]),_._v("UA"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v("\n")])])]),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[_._v("注意")]),_._v(" "),t("p",[_._v("如果同时启用两个及以上的存在冲突的模式，则靠右的模式会覆盖它左边的模式。下面的例子表示检查 User-Agent。")]),_._v(" "),t("div",{staticClass:"language-nginx extra-class"},[t("pre",{pre:!0,attrs:{class:"language-nginx"}},[t("code",[_._v("waf_mode "),t("span",{pre:!0,attrs:{class:"token operator"}},[_._v("!")]),_._v("UA STD"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v("\n")])])])]),_._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[_._v("注意")]),_._v(" "),t("p",[t("code",[_._v("CC")]),_._v("是独立于其它模式的模式，其生效与否不受到其它模式的影响。典型情况如"),t("code",[_._v("URL")]),_._v("模式会受到"),t("code",[_._v("GET")]),_._v("模式的影响，因为如果不使用"),t("code",[_._v("GET")]),_._v("模式，那么在收到"),t("code",[_._v("GET")]),_._v("请求时就不会启动检查，自然也就不会检查 URL，但是"),t("code",[_._v("CC")]),_._v("模式不会受到类似的影响。")])]),_._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[_._v("开发版")]),_._v(" "),t("p",[_._v("开发版中有下列变动。")]),_._v(" "),t("ul",[t("li",[_._v("LIB-INJECTION-SQLI：使用 "),t("a",{attrs:{href:"https://github.com/libinjection/libinjection",target:"_blank",rel:"noopener noreferrer"}},[_._v("libinjection"),t("OutboundLink")],1),_._v(" 检测 SQL 注入。")]),_._v(" "),t("li",[_._v("LIB-INJECTION-XSS：使用 "),t("a",{attrs:{href:"https://github.com/libinjection/libinjection",target:"_blank",rel:"noopener noreferrer"}},[_._v("libinjection"),t("OutboundLink")],1),_._v(" 检测 XSS 攻击。")]),_._v(" "),t("li",[_._v("LIB-INJECTION：等价于 "),t("code",[_._v("LIB-INJECTION-SQLI LIB-INJECTION-XSS")]),_._v("。")])])]),_._v(" "),t("h2",{attrs:{id:"waf-cc-deny"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#waf-cc-deny"}},[_._v("#")]),_._v(" "),t("code",[_._v("waf_cc_deny")])]),_._v(" "),t("ul",[t("li",[_._v("配置语法: waf_cc_deny <rate="),t("em",[_._v("n")]),_._v("r/m> [duration="),t("em",[_._v("1h")]),_._v("] [size="),t("em",[_._v("20m")]),_._v("]")]),_._v(" "),t("li",[_._v("默认配置：—")]),_._v(" "),t("li",[_._v("配置段: server")])]),_._v(" "),t("p",[_._v("设置 CC 防护相关的参数。")]),_._v(" "),t("ul",[t("li",[t("code",[_._v("rate")]),_._v("：表示每分钟的最多请求次数，如 "),t("code",[_._v("60r/m")]),_._v(" 表示每分钟最多请求 60 次。超出限制后会返回 "),t("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/503",target:"_blank",rel:"noopener noreferrer"}},[_._v("503 状态码"),t("OutboundLink")],1),_._v("，并附带 "),t("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Retry-After",target:"_blank",rel:"noopener noreferrer"}},[_._v("Retry-After"),t("OutboundLink")],1),_._v(" 响应头。")]),_._v(" "),t("li",[t("code",[_._v("duration")]),_._v("：表示超出第一个参数 "),t("code",[_._v("rate")]),_._v(" 的限制后拉黑 IP 的时间，如 "),t("code",[_._v("60s")]),_._v("、"),t("code",[_._v("60m")]),_._v("、"),t("code",[_._v("60h")]),_._v(" 和 "),t("code",[_._v("60d")]),_._v("，如不指定则默认为 "),t("code",[_._v("1h")]),_._v("。")]),_._v(" "),t("li",[t("code",[_._v("size")]),_._v("：用于设置记录 IP 访问次数的内存的大小，如 "),t("code",[_._v("20m")]),_._v("、"),t("code",[_._v("2048k")]),_._v("，不得小于 "),t("code",[_._v("20m")]),_._v("，如不指定则默认为 "),t("code",[_._v("20m")]),_._v("。当这段内存耗尽的时候程序会自动重置这块内存以重新统计 IP 的访问次数。")])]),_._v(" "),t("h2",{attrs:{id:"waf-cache"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#waf-cache"}},[_._v("#")]),_._v(" "),t("code",[_._v("waf_cache")])]),_._v(" "),t("ul",[t("li",[_._v("配置语法: waf_cache <capacity="),t("em",[_._v("n")]),_._v("> [interval="),t("em",[_._v("1h")]),_._v("] [percent="),t("em",[_._v("50")]),_._v("]")]),_._v(" "),t("li",[_._v("默认配置：—")]),_._v(" "),t("li",[_._v("配置段: server")])]),_._v(" "),t("p",[_._v("设置缓存规则检查结果相关的参数。")]),_._v(" "),t("ul",[t("li",[t("code",[_._v("capacity")]),_._v("：对于一些启用了缓存机制的检测项目，每个检测项目最多缓存多少个检测目标的检测结果。")]),_._v(" "),t("li",[t("code",[_._v("interval")]),_._v("：用于设置批量淘汰缓存的周期，单位为分钟，如 "),t("code",[_._v("60s")]),_._v("、"),t("code",[_._v("60m")]),_._v("、"),t("code",[_._v("60h")]),_._v(" 和 "),t("code",[_._v("60d")]),_._v("，如不指定则默认为 "),t("code",[_._v("1h")]),_._v("。如不指定则默认为 "),t("code",[_._v("1h")]),_._v("，即一小时。")]),_._v(" "),t("li",[t("code",[_._v("percent")]),_._v("：每次批量淘汰缓存时淘汰掉多少比例的缓存。需要指定一个大于 0 小于等于 100 的整数。若设置为 50 则代表淘汰掉一半的缓存。如不指定则默认为 "),t("code",[_._v("50")]),_._v("。")])]),_._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[_._v("启用了缓存机制的检测项目")]),_._v(" "),t("p",[_._v("启用了缓存机制的检测项目指除了 CC 防护、IP 黑白名单检测和 POST 检测之外的所有的检测项。")])]),_._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[_._v("性能优化建议")]),_._v(" "),t("p",[t("code",[_._v("capacity")]),_._v(" 过小会导致频繁地淘汰缓存，增加内存碎片，降低性能。所以请根据实际应用场景合理地设置。")])]),_._v(" "),t("h2",{attrs:{id:"waf-under-attack"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#waf-under-attack"}},[_._v("#")]),_._v(" "),t("code",[_._v("waf_under_attack")])]),_._v(" "),t("ul",[t("li",[_._v("配置语法: waf_under_attack <"),t("em",[_._v("on")]),_._v(" | "),t("em",[_._v("off")]),_._v("> [uri="),t("em",[_._v("str")]),_._v("]")]),_._v(" "),t("li",[_._v("默认配置：waf_under_attack off")]),_._v(" "),t("li",[_._v("配置段: server")])]),_._v(" "),t("p",[_._v("如果您的站点正在受到攻击可以尝试使用此配置。\n开启后每个用户首次访问会强制延迟五秒，并自动跳转到 "),t("code",[_._v("uri")]),_._v(" 所指向的网页。")]),_._v(" "),t("ul",[t("li",[t("code",[_._v("uri")]),_._v(": 可以是一个完整的网址，也可以是一个路径。比如 "),t("code",[_._v("https://example.com/attack.html")]),_._v(" 或 "),t("code",[_._v("/attack.html")]),_._v("。")])]),_._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[_._v("小技巧")]),_._v(" "),t("p",[t("code",[_._v("uri")]),_._v(" 所指向的网页应该在五秒后自动跳转到用户想要访问的页面，页面的网址可以通过查询字符串获得，参数名为 "),t("code",[_._v("target")]),_._v("。")]),_._v(" "),t("p",[t("code",[_._v("assets/under-attack.html")]),_._v(" 是一个示例网页，你应该将这个文件拷贝到你的网站目录下，并正确地配置 "),t("code",[_._v("uri")]),_._v("。")]),_._v(" "),t("p",[_._v("你自然也可以自己编写一个 html 文件，然后通过 "),t("code",[_._v("uri")]),_._v(" 指向它。")])]),_._v(" "),t("h2",{attrs:{id:"waf-priority"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#waf-priority"}},[_._v("#")]),_._v(" "),t("code",[_._v("waf_priority")])]),_._v(" "),t("ul",[t("li",[_._v('配置语法: waf_priority "'),t("em",[_._v("str")]),_._v('"')]),_._v(" "),t("li",[_._v('默认配置：waf_priority "W-IP IP CC UNDER-ATTACK W-URL URL ARGS UA W-REFERER REFERER COOKIE"')]),_._v(" "),t("li",[_._v("配置段: server")])]),_._v(" "),t("p",[_._v("设置各个检测项目的优先级，除了 POST 检测，POST 检测的优先级永远最低。")]),_._v(" "),t("ul",[t("li",[t("code",[_._v("UNDER-ATTACK")]),_._v(": 配置 "),t("code",[_._v("waf_under_attack")]),_._v("。")]),_._v(" "),t("li",[t("code",[_._v("W-IP")]),_._v("：IP 白名单检测")]),_._v(" "),t("li",[t("code",[_._v("IP")]),_._v("：IP 黑名单检测")]),_._v(" "),t("li",[t("code",[_._v("CC")]),_._v("：CC 防护")]),_._v(" "),t("li",[t("code",[_._v("W-URL")]),_._v("：URL 白名单检测")]),_._v(" "),t("li",[t("code",[_._v("URL")]),_._v("：URL 黑名单检测")]),_._v(" "),t("li",[t("code",[_._v("ARGS")]),_._v("：URL 参数（查询字符串）黑名单检测")]),_._v(" "),t("li",[t("code",[_._v("UA")]),_._v("：User-Agent 黑名单检测")]),_._v(" "),t("li",[t("code",[_._v("W-REFERER")]),_._v("：Referer 白名单检测")]),_._v(" "),t("li",[t("code",[_._v("REFERER")]),_._v("：Referer 黑名单检测")]),_._v(" "),t("li",[t("code",[_._v("COOKIE")]),_._v("：Cookie 黑名单检测")])]),_._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[_._v("警告")]),_._v(" "),t("p",[t("code",[_._v("str")]),_._v(" 必须使用单引号或者双引号包裹，且 "),t("code",[_._v("str")]),_._v(" 必须包含全部的检测项目。")])]),_._v(" "),t("h2",{attrs:{id:"waf-http-status"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#waf-http-status"}},[_._v("#")]),_._v(" "),t("code",[_._v("waf_http_status")])]),_._v(" "),t("ul",[t("li",[_._v("配置语法: waf_http_status [general="),t("em",[_._v("http_status_code")]),_._v("] [cc_deny="),t("em",[_._v("http_status_code")]),_._v("]")]),_._v(" "),t("li",[_._v("默认配置: waf_http_status general=403 cc_deny=503")]),_._v(" "),t("li",[_._v("配置段: server")])]),_._v(" "),t("p",[_._v("此指令用于设置请求被拦截时返回的 HTTP 状态码。")]),_._v(" "),t("ul",[t("li",[t("code",[_._v("general")]),_._v(": 表示所有基于黑名单的检测项目触发后返回的 HTTP 状态码。")]),_._v(" "),t("li",[t("code",[_._v("cc_dney")]),_._v("：表示 CC 防护触发后返回的 HTTP 状态码。")])])])}),[],!1,null,null,null);v.default=a.exports}}]);